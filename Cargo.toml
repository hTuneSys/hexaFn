# SPDX-FileCopyrightText: 2025 Husamettin ARABACI
# SPDX-License-Identifier: MIT

[workspace]
members = [
    "crates/hexafn-core",
    "crates/hexafn-trigger", 
    "crates/hexafn-run",
    "crates/hexafn-store",
    "crates/hexafn-cast", 
    "crates/hexafn-watch",
    "crates/hexafn-bridge",
]
resolver = "2"

[workspace.package]
version = "0.1.0"
authors = ["Husamettin ARABACI <info@hexafn.com>"]
edition = "2021"
license = "MIT"
license-file = "LICENSE"
repository = "https://github.com/hTuneSys/hexaFn"
description = "Modular event-driven function pipeline in Rust."
homepage = "https://hexafn.com"
keywords = ["rust", "pipeline", "event-driven", "modular"]
categories = ["asynchronous", "network-programming", "command-line-utilities"]

[workspace.dependencies]
# Async runtime
tokio = { version = "1.0", features = ["full"] }
async-trait = "0.1"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Domain modeling
uuid = { version = "1.0", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }

# Observability
tracing = "0.1"
tracing-subscriber = "0.3"

# Internal dependencies
hexafn-core = { path = "crates/hexafn-core" }
hexafn-trigger = { path = "crates/hexafn-trigger" }
hexafn-run = { path = "crates/hexafn-run" }
hexafn-store = { path = "crates/hexafn-store" }
hexafn-cast = { path = "crates/hexafn-cast" }
hexafn-watch = { path = "crates/hexafn-watch" }
hexafn-bridge = { path = "crates/hexafn-bridge" }